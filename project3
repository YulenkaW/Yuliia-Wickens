//class ElectricVehicle
package project3.pkg2;


public class ElectricVehicle {

    //private static Object keyboard;
 String Make;
 String Model;
 String Color;
 double KilometersPerKilowattHour;
 int MaxKilowattHoursInBattery;
 int CurrentKilowatHoursInBattery;
//double kilometersToDrive;


    
    public ElectricVehicle(String Make, String Model, String Color, double KilometersPerKw, int CurrentKilowatHoursInBattery,int MaxKilowattHoursInBattery){
    this.Model=Model;
    this.Make=Make;
    this.Color=Color;
    this.KilometersPerKilowattHour=KilometersPerKw;
    this.CurrentKilowatHoursInBattery=10;
     this.MaxKilowattHoursInBattery=MaxKilowattHoursInBattery ;
    }
    

@Override
    public String toString() {
        String wht1;
        wht1=String.format("%s %s %s ", Color, Make, Model);
        String wth2=String.format("%.1f  %d  out of %d\n", KilometersPerKilowattHour,CurrentKilowatHoursInBattery, MaxKilowattHoursInBattery );
        
        return wht1+wth2;
                
        
    }
     public void charge(int charge ){
         CurrentKilowatHoursInBattery+=charge;
        if (CurrentKilowatHoursInBattery>MaxKilowattHoursInBattery){
           CurrentKilowatHoursInBattery= MaxKilowattHoursInBattery;
        }
        if (CurrentKilowatHoursInBattery<0){
            System.out.println("Your battery is 0, charge it ");
        }
     }
          
     
    public String getMake() {
        return Make;
}
    public void setMake(String Make) {
        this.Make=Make;
}
    public String getModel(){
        return Model;
    }
    public void setModel(String Model){
        this.Model=Model;
    }
        
    public String getColor(){
        return Color;
    }
    public void setColor(String Color){
        this.Color=Color;
    }
     public double getKilometersPerKilowattHour(){
        return KilometersPerKilowattHour;
    }
     public void setKilometersPerKilowattHour(double KilometersPerKilowattHour){
         this.KilometersPerKilowattHour=KilometersPerKilowattHour;
     }
     public int getMaxKilowattHoursInBattery(){
         return MaxKilowattHoursInBattery;
}
     public void setMaxKilowattHoursInBattery(int MaxKilowattHoursInBattery){
         this.MaxKilowattHoursInBattery=MaxKilowattHoursInBattery;
     }  
     public int getCurrentKilowatHoursInBattery(){
         return CurrentKilowatHoursInBattery;
}
     public void setCurrentKilowatHoursInBattery(int CurrentKilowatHoursInBattery){
         this.CurrentKilowatHoursInBattery=CurrentKilowatHoursInBattery;
     }  

}

//main
package project3.pkg2;

//import java.util.Scanner;

public class Project32 {

   // private static Object keyboard;

   //double km; 
   //double input;
int km;
   
    public static void main(String[] args) {
      ElectricVehicle Ford=new ElectricVehicle("Ford","Mustang", "White",3500, 350, 1000  ); 
      System. out.println(Ford);
      Ford.charge(1000);
     System. out.println(Ford);
     
    //kilometersToDrive(km);
     
    }
    
   
     public void kilometersToDrive(int km){
    System.out.println("how many km do you want to drive?");
    
    
     }
     
     //testing
     package project3.pkg2;


import org.junit.Test;
import static org.junit.Assert.*;


public class ElectricVehicleTest {
    
    public ElectricVehicleTest() {
    }
    @Test
            public void testConstructor(){
                //arrage 
                
                String expectedColor= "color";
                String expectedMake="";
                String expectedModel="model";
                int expectedMaxKilowattHours=3500;
                int expectedMaxKilowattHoursInBattery=1000;
                double expectedKilometersPerKilowattHour=1;    
                int expectedCurrentKilowatHoursInBattery=350;
                //act
    // ElectricVehicle electricVehicle =new ElectricVehicle(expectedMake,expectedModel,expectedColor,expectedMaxKilowattHours,expectedKilometersPerKw, expectedMaxKilowattHoursInBattery);
    ElectricVehicle electricVehicle = new ElectricVehicle(expectedMake, expectedModel, expectedColor, expectedKilometersPerKw, expectedCurrentKilowatHoursInBattery,expectedMaxKilowattHoursInBattery);
    
    String actualColor=electricVehicle.getColor();
     int actualMaxKilowattHours=electricVehicle.getMaxKilowattHoursInBattery();
     int actualKilometersPerKilowattHour=electricVehicle.getKilometersPerKw();
     int actualCurrentKilowatHoursInBattery=electricVehicle.getCurrentKilowatHoursInBattery;
     
     //assert
     assertEquals(expectedColor, actualColor);
     assertEquals(expectedMaxKilowattHours,actualMaxKilowattHours );
     assertEquals(expectedMaxKilowattHoursInBattery, actualMaxKilowattHoursInBattery);
     assertEquals(expectedCurrentKilowatHoursInBattery, actualCurrentKilowatHoursInBattery);
            }
     public void testChargeNotLessThen0(){
         //arrage
        
                 String expectedColor= "color";
                String expectedMake="";
                String expectedModel="model";
                int expectedMaxKilowattHours=3500;
                int expectedMaxKilowattHoursInBattery=1000;
                double expectedKilometersPerKilowattHour=0;    
                int expectedCurrentKilowatHoursInBattery=350;
                ElectricVehicle electricVehicle =new ElectricVehicle(expectedMake,expectedModel,expectedColor,expectedMaxKilowattHours, expectedKilometersPerKilowattHour,expectedMaxKilowattHoursInBattery);
         //act
         electricVehicle.setCurrentKilowatHoursInBattery(-10);
         int actualCurrentKilowatHoursInBattery=electricVehicle.getCurrentKilowatHoursInBattery();
         
         //assert
         assertEquals(expectedCurrentKilowatHoursInBattery, actualCurrentKilowatHoursInBattery);
     }
     
    
     
            
                
           
    
   
   @Test
    
   
    public void testToString() {
       //System.out.println("toString");
        ElectricVehicle instance = null;
        String expResult = "";
        String result = instance.toString();
        assertEquals(expResult, result);
        

    }
    
    /**
     * Test of charge method, of class ElectricVehicle.
     */
    
    @Test
    public void testCharge() {
       // System.out.println("charge");
        int charge = 0;
        ElectricVehicle instance = null;
        instance.charge(charge);
        
    }
  
   
    /**
     * Test of setColor method, of class ElectricVehicle.
     */
    @Test
    public void testSetColor() {
        System.out.println("setColor");
        String Color = "";
        ElectricVehicle instance = null;
        instance.setColor(Color);
        // TODO review the generated test code and remove the default call to fail.
        fail("The test case is a prototype.");
    }

   


